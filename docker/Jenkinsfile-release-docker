#! /usr/bin/groovy

def AGENT_LABEL = 'docker && !mr-0xc8'
pipeline {

  agent { label AGENT_LABEL }

  parameters {
    string(name: 'imageVersion', description: 'Version of the image which should be published under tag latest')
    string(name: 'dockerRegistry', defaultValue: 'docker.h2o.ai')
  }

  options {
    ansiColor('xterm')
    timestamps()
    timeout(time: 2, unit: 'HOURS')
  }

  stages {
    stage ('Publish Docker Image') {
      steps {
        script {
          if (param.imageVersion == null) {
            error "imageVersion must be set"
          }
        }
        withCredentials([usernamePassword(credentialsId: "${params.dockerRegistry}", usernameVariable: 'REGISTRY_USERNAME', passwordVariable: 'REGISTRY_PASSWORD')]) {
          sh """
            docker login -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD ${params.dockerRegistry}
            docker pull docker.h2o.ai/opsh2oai/h2o-3-runtime:${params.imageVersion}
            docker tag docker.h2o.ai/opsh2oai/h2o-3-runtime:${params.imageVersion} docker.h2o.ai/opsh2oai/h2o-3-runtime:latest
            docker push ${params.dockerRegistry}/opsh2oai/h2o-3-runtime:latest
          """
          echo "docker.h2o.ai/opsh2oai/h2o-3-runtime:${params.imageVersion} released as docker.h2o.ai/opsh2oai/h2o-3-runtime:latest"
        }
      }
    }
  }
}
